# Production Dockerfile for Frontend
# Multi-stage build for optimized static serving
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy frontend source
COPY frontend/ ./

# Build production frontend (if using React/Vue, otherwise just copy)
# For now, we'll use the static HTML approach
RUN ls -la

# Production stage with nginx
FROM nginx:alpine

# Copy custom nginx configuration
COPY deployment/docker/nginx.conf /etc/nginx/nginx.conf

# Copy static files
COPY frontend/ /usr/share/nginx/html/

# Set ownership for existing nginx user
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Make nginx directories writable
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
